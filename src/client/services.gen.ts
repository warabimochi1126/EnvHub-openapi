// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-fetch';
import type { PostAuthStatusCheckData, PostAuthStatusCheckError, PostAuthStatusCheckResponse, PostUploadsConfirmData, PostUploadsConfirmError, PostUploadsConfirmResponse, GetRepositoriesByRepositoryIdCommitsData, GetRepositoriesByRepositoryIdCommitsError, GetRepositoriesByRepositoryIdCommitsResponse, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesData, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesError, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesResponse, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadData, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadError, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadResponse, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadByFileNameData, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadByFileNameError, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadByFileNameResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * 認証状態取得API
 */
export const postAuthStatusCheck = <ThrowOnError extends boolean = false>(options: Options<PostAuthStatusCheckData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostAuthStatusCheckResponse, PostAuthStatusCheckError, ThrowOnError>({
        ...options,
        url: '/auth/status-check'
    });
};

/**
 * envファイルアップロードAPI
 */
export const postUploadsConfirm = <ThrowOnError extends boolean = false>(options: Options<PostUploadsConfirmData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostUploadsConfirmResponse, PostUploadsConfirmError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/uploads/confirm'
    });
};

/**
 * リポジトリに紐づくコミット一覧取得API
 */
export const getRepositoriesByRepositoryIdCommits = <ThrowOnError extends boolean = false>(options: Options<GetRepositoriesByRepositoryIdCommitsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetRepositoriesByRepositoryIdCommitsResponse, GetRepositoriesByRepositoryIdCommitsError, ThrowOnError>({
        ...options,
        url: '/repositories/{repositoryId}/commits'
    });
};

/**
 * コミットに紐づくファイル一覧取得API
 */
export const getRepositoriesByRepositoryIdCommitsByCommitUuidFiles = <ThrowOnError extends boolean = false>(options: Options<GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesResponse, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesError, ThrowOnError>({
        ...options,
        url: '/repositories/{repositoryId}/commits/{commitUuid}/files'
    });
};

/**
 * コミットに紐づくファイル群の一括ダウンロードリンク取得API
 */
export const getRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownload = <ThrowOnError extends boolean = false>(options: Options<GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadResponse, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadError, ThrowOnError>({
        ...options,
        url: '/repositories/{repositoryId}/commits/{commitUuid}/files/download'
    });
};

/**
 * コミットに紐づくファイルの単体ダウンロードリンク取得API
 */
export const getRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadByFileName = <ThrowOnError extends boolean = false>(options: Options<GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadByFileNameData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadByFileNameResponse, GetRepositoriesByRepositoryIdCommitsByCommitUuidFilesDownloadByFileNameError, ThrowOnError>({
        ...options,
        url: '/repositories/{repositoryId}/commits/{commitUuid}/files/download/{fileName}'
    });
};